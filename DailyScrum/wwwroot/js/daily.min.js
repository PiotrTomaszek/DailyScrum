function scrollToBottom() { var e = document.getElementById("chatHolder"); e.scrollTop = e.scrollHeight - e.clientHeight } connection.on("DisplayStartTime", function (e) { var t = document.getElementById("starting-time"), n = "Start: " + new Date(e).toLocaleTimeString("pl-PL"); t.innerHTML = n }), connection.on("DisposeUserList", function () { document.getElementById("usersList").innerHTML = "" }), connection.on("StartDaily", function () { }), connection.on("EndDaily", function () { }), connection.on("EnabledOptions", function (e, t) { if (e) if ("Scrum Master" === t) { var n = document.getElementById("startMeetingHolder"), s = document.getElementById("endMeetingHolder"); n.classList.add("disabled"), s.classList.remove("disabled"), n.classList.add("text-muted"), s.classList.remove("text-muted") } else { (a = document.getElementById("modalHolder")).classList.remove("disabled"), a.classList.remove("text-muted") } else if ("Scrum Master" === t) { n = document.getElementById("startMeetingHolder"), s = document.getElementById("endMeetingHolder"); n.classList.remove("disabled"), s.classList.add("disabled"), n.classList.remove("text-muted"), s.classList.add("text-muted") } else { var a; (a = document.getElementById("modalHolder")).classList.add("disabled"), a.classList.add("text-muted") } }), connection.on("GenDevOptions", function () { var e = document.getElementById("dropdownDailyOptions"), t = document.createElement("a"); t.classList.add("dropdown-item"), t.classList.add("text-center"), t.classList.add("disabled"), t.id = "modalHolder", t.dataset.toggle = "modal", t.dataset.target = "#exampleModal", t.innerHTML = "Dodaj post", e.appendChild(t) }), connection.on("GenScrumMasterOptions", function () { var e = document.getElementById("dropdownDailyOptions"), t = document.createElement("a"); t.classList.add("dropdown-item"), t.classList.add("text-center"), t.id = "startMeetingHolder", t.dataset.toggle = "modal", t.dataset.target = "#startMeetingModal", t.innerHTML = "Rozpocznij spotkanie", e.appendChild(t); var n = document.createElement("a"); n.classList.add("dropdown-item"), n.classList.add("text-center"), n.classList.add("disabled"), n.classList.add("text-muted"), n.id = "endMeetingHolder", n.dataset.toggle = "modal", n.dataset.target = "#endMeetingModal", n.innerHTML = "Koniec spotkania", e.appendChild(n); var s = document.createElement("a"); s.classList.add("dropdown-item"), s.classList.add("text-center"), s.style.color = "black", s.id = "meetingArchiveManager", s.innerHTML = "Archiwum Daily", s.href = "/meetingsarchive", e.appendChild(s) }), connection.on("EnableSubmitPostButton", function (e, t) { var n = document.getElementById("submitDailyPost"); n.disabled = !e || !!t }), connection.on("SendDailyPost", function (e, t, n, s, a, d, o) { var i = new Date(a); i.getHours() !== (new Date).getHours() && i.setHours(i.getHours() + (new Date).getTimezoneOffset() / -60); var l = i.toLocaleTimeString("pl-PL"), c = document.getElementById("dailyPostPlace"), r = document.createElement("div"); r.classList.add("p-card"), r.classList.add("bg-white"), r.classList.add("p-2"), r.classList.add("px-3"), r.classList.add("rounded"), r.classList.add("mb-1"), r.classList.add("border"), r.classList.add("border-dark"), r.innerHTML = `<div class="row">\n                        <div class="col-2 col-md-1 pt-3">\n                            <img src="${o}" alt="" class="rounded-circle border border-dark" style="width:40px;height:40px" />\n                        </div>\n                        <div class="col-8 col-md-9 text-left">\n                            <p class="mt-2">${l}</p>\n                            <p><strong>${e}</strong> doda³(a) nowy post do spotkania daily!</p>\n                        </div>\n                        <div class="col-2 col-md-2">\n                            <button class="btn text-center" type="button" data-toggle="collapse" data-target="#collapseUser-${d}" aria-expanded="false" aria-controls="collapseExample">\n                                <i class="fas fa-plus"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class="collapse pt-2" id="collapseUser-${d}" style="background-color:cornsilk">\n                        <div class="row">\n                            <div class="col-1 offset-1">\n                                <div class="daily-yesterday-line"></div>\n                            </div>\n                            <div class="col-8">\n                                <h6><strong>Co zrobi³eœ wczoraj?</strong></h6>\n                                <p>${t}</p>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-1 offset-1">\n                                <div class="daily-today-line"></div>\n                            </div>\n                            <div class="col-8">\n                                <h6><strong>Co zrobisz dzisiaj?</strong></h6>\n                                <p>${n}</p>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-1 offset-1">\n                                <div class="daily-problem-line"></div>\n                            </div>\n                            <div class="col-8">\n                                <h6><strong>Jakie widzisz problemy?</strong></h6>\n                                <p>${s}</p>\n                            </div>\n                        </div>\n                    </div>`, c.appendChild(r) }), connection.on("ShowSentMessage", function (e, t, n) { var s = document.createElement("li"), a = new Date(n).toLocaleTimeString("pl-PL"); s.innerHTML = ` <div class="chat-hour">${a}</div>\n                            <div class="chat-text" style="background-color: lightgrey">\n                                ${t}\n                            </div>\n                            <div class="chat-avatar">`, s.classList.add("chat-right"), document.getElementById("messagesList").appendChild(s), scrollToBottom() }), connection.on("GenerateShowSentMessage", function (e, t, n) { var s = document.createElement("li"), a = new Date(n); a.setHours(a.getHours() + (new Date).getTimezoneOffset() / -60); var d = a.toLocaleTimeString("pl-PL"); s.innerHTML = ` <div class="chat-hour">${d}</div>\n                            <div class="chat-text" style="background-color: lightgrey">\n                                ${t}\n                            </div>\n                            <div class="chat-avatar">`, s.classList.add("chat-right"), document.getElementById("messagesList").appendChild(s), scrollToBottom() }), connection.on("GenerateSendMessageToGroup", function (e, t, n, s) { var a = document.createElement("li"), d = new Date(n); d.setHours(d.getHours() + (new Date).getTimezoneOffset() / -60); var o = d.toLocaleTimeString("pl-PL"); a.innerHTML = `<div class="chat-avatar">\n                                <img src="${s}" alt="">\n                                <div class="chat-name">${e}</div>\n                            </div>\n                            <div class="chat-text" style="background-color: bisque">\n                                ${t}\n                            </div>\n                            <div class="chat-hour">${o}</div>`, a.classList.add("chat-left"), document.getElementById("messagesList").appendChild(a), scrollToBottom() }), connection.on("SendMessageToGroup", function (e, t, n, s) { var a = document.createElement("li"), d = new Date(n).toLocaleTimeString("pl-PL"); a.innerHTML = `<div class="chat-avatar">\n                                <img src="${s}" alt="">\n                                <div class="chat-name">${e}</div>\n                            </div>\n                            <div class="chat-text" style="background-color: bisque">\n                                ${t}\n                            </div>\n                            <div class="chat-hour">${d}</div>`, a.classList.add("chat-left"), document.getElementById("messagesList").appendChild(a), scrollToBottom() }), connection.on("SetUserStatus", function (e, t) { var n = document.getElementById(`${e}-icon`); t ? n.classList.remove("offline") : n.classList.add("offline") }), connection.on("UserConnected", function (e, t, n, s, a) { var d = document.createElement("li"), o = a; null == a && (o = "-"); var i = `<div class="d-flex">\n                            <div class="img_cont">\n                                <img src="${s}" class="rounded-circle user_img">\n                                <span id="${n}-icon" class="online_icon offline"></span>\n                            </div>\n                            <div class="user_info text-left">\n                                <span>${e}</span>\n                                <p>${o}</p>\n                            </div>\n                         </div>`; d.innerHTML = i, d.id = n, document.getElementById("usersList").appendChild(d) }), connection.on("UpdateUserList", function (e, t) { document.getElementById("online-team-members").innerHTML = `${e}/${t}`, document.getElementById("online-team-members2").innerHTML = `${e}/${t}` }), connection.on("GenerateUserCounter", function (e, t) { document.getElementById("online-team-members").innerHTML = `${e}/${t}`, document.getElementById("online-team-members2").innerHTML = `${e}/${t}` }), connection.on("DisplayTeamName", function (e) { document.getElementById("team-name").innerHTML = `${e}` });